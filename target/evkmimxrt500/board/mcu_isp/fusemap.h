/*
 * Copyright 2017-2021 NXP
 * All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 */
#ifndef __FUSEMAP_H__
#define __FUSEMAP_H__

#include "fsl_device_registers.h"
//#include "otp/fsl_otp.h"

#define OTP_PTE_VALID_CONFIG_FUSE_IDX (39)

// CUST_WR_RD_LOCK0
#define OTP_CUST_WR_RD_LOCK0_IDX (0x8)
#define OTP_OTFAD_CFG_WR_LOCK_SHIFT (2)
#define OTP_OTFAD_CFG_WR_LOCK_MASK (1u << OTP_OTFAD_CFG_WR_LOCK_SHIFT)
#define OTP_OTFAD_CFG_RD_LOCK_SHIFT (3)
#define OTP_OTFAD_CFG_RD_LOCK_MASK (1u << OTP_OTFAD_CFG_RD_LOCK_SHIFT)
#define OTP_OTFAD_SCRAMBLE_WR_LOCK_SHIFT (4)
#define OTP_OTFAD_SCRAMBLE_WR_LOCK_MASK (1u << OTP_OTFAD_SCRAMBLE_WR_LOCK_SHIFT)
#define OTP_OTFAD_SCRAMBLE_RD_LOCK_SHIFT (5)
#define OTP_OTFAD_SCRAMBLE_RD_LOCK_MASK (1u << OTP_OTFAD_SCRAMBLE_RD_LOCK_SHIFT)
#define OTP_OTFAD_KEK_WR_LOCK_SHIFT (6)
#define OTP_OTFAD_KEK_WR_LOCK_MASK (1u << OTP_OTFAD_KEK_WR_LOCK_SHIFT)
#define OTP_OTFAD_KEK_RD_LOCK_SHIFT (7)
#define OTP_OTFAD_KEK_RD_LOCK_MASK (1u << OTP_OTFAD_KEK_RD_LOCK_SHIFT)
#define OTP_OTFAD_KEK_RD_LOCK_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_CUST_WR_RD_LOCK0_IDX] & OTP_OTFAD_KEK_RD_LOCK_MASK) >> OTP_OTFAD_KEK_RD_LOCK_SHIFT)
#define OTP_SBKEK_WR_LOCK_SHIFT (8)
#define OTP_SBKEK_WR_LOCK_MASK (1u << OTP_SBKEK_WR_LOCK_SHIFT)
#define OTP_BOOT_CFG5_WR_LOCK_SHIFT (9)
#define OTP_BOOT_CFG5_WR_LOCK_MASK (1u << OTP_BOOT_CFG5_WR_LOCK_SHIFT)

// FA mode
#define OTP_FA_FUSE_IDX (0x65)
#define OTP_FA_SHIFT (4)
#define OTP_FA_MASK (1u << OTP_FA_SHIFT)
#define OTP_FA_VALUE() ((OCOTP0->OTP_SHADOW[OTP_FA_FUSE_IDX] & OTP_FA_MASK) >> OTP_FA_SHIFT)

#define OTP_BOOT_CFG_CRC_EN_IDX (0x64)
#define OTP_BOOT_CFG_CRC_EN_SHIFT (6)
#define OTP_BOOT_CFG_CRC_EN_MASK (1u << OTP_BOOT_CFG_CRC_EN_SHIFT)

#define OTP_SEC_CFG_CRC_EN_IDX (0x64)
#define OTP_SEC_CFG_CRC_EN_SHIFT (7)
#define OTP_SEC_CFG_CRC_EN_MASK (1u << OTP_SEC_CFG_CRC_EN_SHIFT)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//                                                                                                                    //
//                                  Common boot cfg fuse definitions                                                  //
//                                                                                                                    //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BOOT SOURCE Selection
#define OTP_BOOTSRC_FUSE_IDX (0x60)
#define OTP_BOOTSRC_SHIFT (0u)
#define OTP_BOOTSRC_MASK (0x0fu << OTP_BOOTSRC_SHIFT)
#define OTP_BOOTSRC_VALUE() ((OCOTP0->OTP_SHADOW[OTP_BOOTSRC_FUSE_IDX] & OTP_BOOTSRC_MASK) >> OTP_BOOTSRC_SHIFT)

// ISP mode selection
#define OTP_ISPMODE_FUSE_IDX (0x60)
#define OTP_ISPMODE_SHIFT (4u)
#define OTP_ISPMODE_MASK (0x07u << OTP_ISPMODE_SHIFT)
#define OTP_ISPMODE_VALUE() ((OCOTP0->OTP_SHADOW[OTP_ISPMODE_FUSE_IDX] & OTP_ISPMODE_MASK) >> OTP_ISPMODE_SHIFT)

// BOOT SPEED
#define OTP_BOOTSPEED_FUSE_IDX (0x60)
#define OTP_BOOTSPEED_SHIFT (7u)
#define OTP_BOOTSPEED_MASK (1u << OTP_BOOTSPEED_SHIFT)
#define OTP_BOOTSPEED_VALUE() ((OCOTP0->OTP_SHADOW[OTP_BOOTSPEED_FUSE_IDX] & OTP_BOOTSPEED_MASK) >> OTP_BOOTSPEED_SHIFT)

// RSA4K_EN
#define OTP_RSA4K_EN_FUSE_IDX (0x60)
#define OTP_RSA4K_EN_SHIFT (8u)
#define OTP_RSA4K_EN_MASK (1u << OTP_RSA4K_EN_SHIFT)
#define OTP_RSA4K_EN_VALUE() ((OCOTP0->OTP_SHADOW[OTP_RSA4K_EN_FUSE_IDX] & OTP_RSA4K_EN_MASK) >> OTP_RSA4K_EN_SHIFT)

// WATCH DOG ENABLE & DOG FEEDING TIME
#define OTP_WWDT_EN_FUSE_IDX (0x60)
#define OTP_WWDT_EN_SHIFT (9u)
#define OTP_WWDT_EN_MASK (3u << OTP_WWDT_EN_SHIFT)
#define OTP_WWDT_EN_VALUE() ((OCOTP0->OTP_SHADOW[OTP_WWDT_EN_FUSE_IDX] & OTP_WWDT_EN_MASK) >> OTP_WWDT_EN_SHIFT)

// USE_PUF
#define OTP_USE_PUF_FUSE_IDX (0x65)
#define OTP_USE_PUF_SHIFT (7u)
#define OTP_USE_PUF_MASK (1u << OTP_USE_PUF_SHIFT)
#define OTP_USE_PUF_VALUE() ((OCOTP0->OTP_SHADOW[OTP_USE_PUF_FUSE_IDX] & OTP_USE_PUF_MASK) >> OTP_USE_PUF_SHIFT)

// PUF_BLOCK_ENROLL
#define OTP_PUF_BLOCK_ENROLL_FUSE_IDX (0x65)
#define OTP_PUF_BLOCK_ENROLL_SHIFT (8u)
#define OTP_PUF_BLOCK_ENROLL_MASK (1u << OTP_PUF_BLOCK_ENROLL_SHIFT)
#define OTP_PUF_BLOCK_ENROLL_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_PUF_BLOCK_ENROLL_FUSE_IDX] & OTP_PUF_BLOCK_ENROLL_MASK) >> OTP_PUF_BLOCK_ENROLL_SHIFT)

// PUF_BLOCK_SET_KEY
#define OTP_PUF_BLOCK_SET_KEY_FUSE_IDX (0x65)
#define OTP_PUF_BLOCK_SET_KEY_SHIFT (9u)
#define OTP_PUF_BLOCK_SET_KEY_MASK (1u << OTP_PUF_BLOCK_SET_KEY_SHIFT)
#define OTP_PUF_BLOCK_SET_KEY_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_PUF_BLOCK_SET_KEY_FUSE_IDX] & OTP_PUF_BLOCK_SET_KEY_MASK) >> OTP_PUF_BLOCK_SET_KEY_SHIFT)

// STOP_ON_FAILURE
#define OTP_STOP_ON_FAILURE_FUSE_IDX (0x60)
#define OTP_STOP_ON_FAILURE_SHIFT (12u)
#define OTP_STOP_ON_FAILURE_MASK (1u << OTP_STOP_ON_FAILURE_SHIFT)
#define OTP_STOP_ON_FAILURE_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_STOP_ON_FAILURE_FUSE_IDX] & OTP_STOP_ON_FAILURE_MASK) >> OTP_STOP_ON_FAILURE_SHIFT)

// TZM_IMAGE_TYPE
#define OTP_TZM_IMAGE_TYPE_FUSE_IDX (0x60)
#define OTP_TZM_IMAGE_TYPE_SHIFT (13u)
#define OTP_TZM_IMAGE_TYPE_MASK (3u << OTP_TZM_IMAGE_TYPE_SHIFT)
#define OTP_TZM_IMAGE_TYPE_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_TZM_IMAGE_TYPE_FUSE_IDX] & OTP_TZM_IMAGE_TYPE_MASK) >> OTP_TZM_IMAGE_TYPE_SHIFT)

// WDT_TIMEOUT
#define OTP_WDT_TIMEOUT_FUSE_IDX (0x60)
#define OTP_WDT_TIMEOUT_SHIFT (15u)
#define OTP_WDT_TIMEOUT_MASK (3u << OTP_WDT_TIMEOUT_SHIFT)
#define OTP_WDT_TIMEOUT_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_WDT_TIMEOUT_FUSE_IDX] & OTP_WDT_TIMEOUT_MASK) >> OTP_WDT_TIMEOUT_SHIFT)

// REC_SPI_BOOT_INSTANCE
#define OTP_REC_SPI_BOOT_INSTANCE_FUSE_IDX (0x60)
#define OTP_REC_SPI_BOOT_INSTANCE_SHIFT (17u)
#define OTP_REC_SPI_BOOT_INSTANCE_MASK (7u << OTP_REC_SPI_BOOT_INSTANCE_SHIFT)
#define OTP_REC_SPI_BOOT_INSTANCE_VALUE()                                                        \
    ((OCOTP0->OTP_SHADOW[OTP_REC_SPI_BOOT_INSTANCE_FUSE_IDX] & OTP_REC_SPI_BOOT_INSTANCE_MASK) >> \
     OTP_REC_SPI_BOOT_INSTANCE_SHIFT)

// BOOT_FAIL_GPIO_PORT
#define OTP_BOOT_FAIL_GPIO_PORT_FUSE_IDX (0x60)
#define OTP_BOOT_FAIL_GPIO_PORT_SHIFT (24u)
#define OTP_BOOT_FAIL_GPIO_PORT_MASK (0x7 << OTP_BOOT_FAIL_GPIO_PORT_SHIFT)
#define OTP_BOOT_FAIL_GPIO_PORT_VALUE()                                                      \
    ((OCOTP0->OTP_SHADOW[OTP_BOOT_FAIL_GPIO_PORT_FUSE_IDX] & OTP_BOOT_FAIL_GPIO_PORT_MASK) >> \
     OTP_BOOT_FAIL_GPIO_PORT_SHIFT)

// BOOT_FAIL_GPIO_PIN
#define OTP_BOOT_FAIL_GPIO_PIN_FUSE_IDX (0x60)
#define OTP_BOOT_FAIL_GPIO_PIN_SHIFT (27u)
#define OTP_BOOT_FAIL_GPIO_PIN_MASK (0x1f << OTP_BOOT_FAIL_GPIO_PIN_SHIFT)
#define OTP_BOOT_FAIL_GPIO_PIN_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_BOOT_FAIL_GPIO_PIN_FUSE_IDX] & OTP_BOOT_FAIL_GPIO_PIN_MASK) >> OTP_BOOT_FAIL_GPIO_PIN_SHIFT)

// TRNG_TRIM fuse 0x3F
#define OTP_TRNG_TRIM_FUSE_IDX (0x3F)
#define OTP_TRNG_TRIM_FUSE_SHIFT (0u)
#define OTP_TRNG_TRIM_FUSE_MASK (0x000000FFu << OTP_TRNG_TRIM_FUSE_SHIFT)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//                                                                                                                    //
//                                  FLEXSPI related fuse definitions //
//                                                                                                                    //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OTP_FLEXSPI_FLASH_AUTO_PROBE_EN
#define OTP_FLEXSPI_FLASH_AUTO_PROBE_EN_FUSE_IDX (0x61)
#define OTP_FLEXSPI_FLASH_AUTO_PROBE_EN_SHIFT (0u)
#define OTP_FLEXSPI_FLASH_AUTO_PROBE_EN_MASK (0x1u << OTP_FLEXSPI_FLASH_AUTO_PROBE_EN_SHIFT)
#define OTP_FLEXSPI_FLASH_AUTO_PROBE_EN_VALUE()                                                              \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_FLASH_AUTO_PROBE_EN_FUSE_IDX] & OTP_FLEXSPI_FLASH_AUTO_PROBE_EN_MASK) >> \
     OTP_FLEXSPI_FLASH_AUTO_PROBE_EN_SHIFT)

// OTP_FLEXSPI_FLASH_PROBE_TYPE
#define OTP_FLEXSPI_FLASH_PROBE_TYPE_FUSE_IDX (0x61)
#define OTP_FLEXSPI_FLASH_PROBE_TYPE_SHIFT (1u)
#define OTP_FLEXSPI_FLASH_PROBE_TYPE_MASK (0x7u << OTP_FLEXSPI_FLASH_PROBE_TYPE_SHIFT)
#define OTP_FLEXSPI_FLASH_PROBE_TYPE_VALUE()                                                           \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_FLASH_PROBE_TYPE_FUSE_IDX] & OTP_FLEXSPI_FLASH_PROBE_TYPE_MASK) >> \
     OTP_FLEXSPI_FLASH_PROBE_TYPE_SHIFT)

// OTP_FLEXSPI_FLASH_TYPE
#define OTP_FLEXSPI_FLASH_TYPE_FUSE_IDX (0x61)
#define OTP_FLEXSPI_FLASH_TYPE_SHIFT (4u)
#define OTP_FLEXSPI_FLASH_TYPE_MASK (0x7u << OTP_FLEXSPI_FLASH_TYPE_SHIFT)
#define OTP_FLEXSPI_FLASH_TYPE_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_FLASH_TYPE_FUSE_IDX] & OTP_FLEXSPI_FLASH_TYPE_MASK) >> OTP_FLEXSPI_FLASH_TYPE_SHIFT)

// OTP_FLEXSPI_FLASH_DUMMY_CYCLES
#define OTP_FLEXSPI_FLASH_DUMMY_CYCLES_FUSE_IDX (0x61)
#define OTP_FLEXSPI_FLASH_DUMMY_CYCLES_SHIFT (7u)
#define OTP_FLEXSPI_FLASH_DUMMY_CYCLES_MASK (0xfu << OTP_FLEXSPI_FLASH_DUMMY_CYCLES_SHIFT)
#define OTP_FLEXSPI_FLASH_DUMMY_CYCLES_VALUE()                                                             \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_FLASH_DUMMY_CYCLES_FUSE_IDX] & OTP_FLEXSPI_FLASH_DUMMY_CYCLES_MASK) >> \
     OTP_FLEXSPI_FLASH_DUMMY_CYCLES_SHIFT)

// OTP_FLEXSPI_FLASH_BOOT_FREQ
#define OTP_FLEXSPI_FLASH_BOOT_FREQ_FUSE_IDX (0x61)
#define OTP_FLEXSPI_FLASH_BOOT_FREQ_SHIFT (11u)
#define OTP_FLEXSPI_FLASH_BOOT_FREQ_MASK (0x7u << OTP_FLEXSPI_FLASH_BOOT_FREQ_SHIFT)
#define OTP_FLEXSPI_FLASH_BOOT_FREQ_VALUE()                                                          \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_FLASH_BOOT_FREQ_FUSE_IDX] & OTP_FLEXSPI_FLASH_BOOT_FREQ_MASK) >> \
     OTP_FLEXSPI_FLASH_BOOT_FREQ_SHIFT)

// FLEXSPI_RESET_PIN_EN
#define OTP_FLEXSPI_RESET_PIN_EN_FUSE_IDX (0x61)
#define OTP_FLEXSPI_RESET_PIN_EN_SHIFT (14u)
#define OTP_FLEXSPI_RESET_PIN_EN_MASK (0x1u << OTP_FLEXSPI_RESET_PIN_EN_SHIFT)
#define OTP_FLEXSPI_RESET_PIN_EN_VALUE()                                                       \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_RESET_PIN_EN_FUSE_IDX] & OTP_FLEXSPI_RESET_PIN_EN_MASK) >> \
     OTP_FLEXSPI_RESET_PIN_EN_SHIFT)

// FLEXSPI_RESET_PIN_PORT
#define OTP_FLEXSPI_RESET_PIN_PORT_FUSE_IDX (0x61)
#define OTP_FLEXSPI_RESET_PIN_PORT_SHIFT (15u)
#define OTP_FLEXSPI_RESET_PIN_PORT_MASK (0x7u << OTP_FLEXSPI_RESET_PIN_PORT_SHIFT)
#define OTP_FLEXSPI_RESET_PIN_PORT_VALUE()                                                         \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_RESET_PIN_PORT_FUSE_IDX] & OTP_FLEXSPI_RESET_PIN_PORT_MASK) >> \
     OTP_FLEXSPI_RESET_PIN_PORT_SHIFT)

// FLEXSPI_RESET_PIN_GPIO
#define OTP_FLEXSPI_RESET_PIN_GPIO_FUSE_IDX (0x61)
#define OTP_FLEXSPI_RESET_PIN_GPIO_SHIFT (18u)
#define OTP_FLEXSPI_RESET_PIN_GPIO_MASK (0x1fu << OTP_FLEXSPI_RESET_PIN_GPIO_SHIFT)
#define OTP_FLEXSPI_RESET_PIN_GPIO_VALUE()                                                         \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_RESET_PIN_GPIO_FUSE_IDX] & OTP_FLEXSPI_RESET_PIN_GPIO_MASK) >> \
     OTP_FLEXSPI_RESET_PIN_GPIO_SHIFT)

// FLEXSPI_HOLD_TIME
#define OTP_FLEXSPI_HOLD_TIME_FUSE_IDX (0x61)
#define OTP_FLEXSPI_HOLD_TIME_SHIFT (23u)
#define OTP_FLEXSPI_HOLD_TIME_MASK (0x3u << OTP_FLEXSPI_HOLD_TIME_SHIFT)
#define OTP_FLEXSPI_HOLD_TIME_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_HOLD_TIME_FUSE_IDX] & OTP_FLEXSPI_HOLD_TIME_MASK) >> OTP_FLEXSPI_HOLD_TIME_SHIFT)

// FLEXSPI_PWR_HOLD_TIME
#define OTP_FLEXSPI_PWR_HOLD_TIME_FUSE_IDX (0x61)
#define OTP_FLEXSPI_PWR_HOLD_TIME_SHIFT (25u)
#define OTP_FLEXSPI_PWR_HOLD_TIME_MASK (0xfu << OTP_FLEXSPI_PWR_HOLD_TIME_SHIFT)
#define OTP_FLEXSPI_PWR_HOLD_TIME_VALUE()                                                        \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_PWR_HOLD_TIME_FUSE_IDX] & OTP_FLEXSPI_PWR_HOLD_TIME_MASK) >> \
     OTP_FLEXSPI_PWR_HOLD_TIME_SHIFT)

// ENABLE PLL USING XTAL
#define OTP_BOOT_CLOCK_USE_XTAL_TO_PLL_FUSE_IDX (0x61)
#define OTP_BOOT_CLOCK_USE_XTAL_TO_PLL_SHIFT (29u)
#define OTP_BOOT_CLOCK_USE_XTAL_TO_PLL_MASK (0x1u << OTP_BOOT_CLOCK_USE_XTAL_TO_PLL_SHIFT)
#define OTP_BOOT_CLOCK_USE_XTAL_TO_PLL_VALUE()                                                             \
    ((OCOTP0->OTP_SHADOW[OTP_BOOT_CLOCK_USE_XTAL_TO_PLL_FUSE_IDX] & OTP_BOOT_CLOCK_USE_XTAL_TO_PLL_MASK) >> \
     OTP_BOOT_CLOCK_USE_XTAL_TO_PLL_SHIFT)

// ENABLE PLL USING XTAL FOR 16M/24M  0:24Mhz, 1:16Mhz
#define OTP_BOOT_CLOCK_XTAL_FREQ_FUSE_IDX (0x61)
#define OTP_BOOT_CLOCK_XTAL_FREQ_SHIFT (30u)
#define OTP_BOOT_CLOCK_XTAL_FREQ_MASK (0x1u << OTP_BOOT_CLOCK_XTAL_FREQ_SHIFT)
#define OTP_BOOT_CLOCK_XTAL_FREQ_VALUE()                                                       \
    ((OCOTP0->OTP_SHADOW[OTP_BOOT_CLOCK_XTAL_FREQ_FUSE_IDX] & OTP_BOOT_CLOCK_XTAL_FREQ_MASK) >> \
     OTP_BOOT_CLOCK_XTAL_FREQ_SHIFT)

// ENABLE NOR FLASH CONFIG IN ISP MODE
#define OTP_BOOT_EN_FLASH_CONFIG_FUSE_IDX (0x61)
#define OTP_BOOT_EN_FLASH_CONFIG_SHIFT (31u)
#define OTP_BOOT_EN_FLASH_CONFIG_MASK (0x1u << OTP_BOOT_EN_FLASH_CONFIG_SHIFT)
#define OTP_BOOT_EN_FLASH_CONFIG_VALUE()                                                       \
    ((OCOTP0->OTP_SHADOW[OTP_BOOT_EN_FLASH_CONFIG_FUSE_IDX] & OTP_BOOT_EN_FLASH_CONFIG_MASK) >> \
     OTP_BOOT_EN_FLASH_CONFIG_SHIFT)

// FLEXSPI_DELAY_CELL_NUM
#define OTP_FLEXSPI_DELAY_CELL_NUM_FUSE_IDX (0x63)
#define OTP_FLEXSPI_DELAY_CELL_NUM_SHIFT (0u)
#define OTP_FLEXSPI_DELAY_CELL_NUM_MASK (0x7fu << OTP_FLEXSPI_DELAY_CELL_NUM_SHIFT)
#define OTP_FLEXSPI_DELAY_CELL_NUM_VALUE()                                                         \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_DELAY_CELL_NUM_FUSE_IDX] & OTP_FLEXSPI_DELAY_CELL_NUM_MASK) >> \
     OTP_FLEXSPI_DELAY_CELL_NUM_SHIFT)

// FLEXSPI_FLASH SEC IMAGE_OFFSET
#define OTP_FLEXSPI_SEC_IMG_OFFSET_FUSE_IDX (0x63)
#define OTP_FLEXSPI_SEC_IMG_OFFSET_SHIFT (22u)
#define OTP_FLEXSPI_SEC_IMG_OFFSET_MASK (0x3ffu << OTP_FLEXSPI_SEC_IMG_OFFSET_SHIFT)
#define OTP_FLEXSPI_SEC_IMG_OFFSET_VALUE()                                                         \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_SEC_IMG_OFFSET_FUSE_IDX] & OTP_FLEXSPI_SEC_IMG_OFFSET_MASK) >> \
     OTP_FLEXSPI_SEC_IMG_OFFSET_SHIFT)

// FLEXSPI_FLASH IMAGE_SIZE
#define OTP_FLEXSPI_FLASH_IMG_SIZE_FUSE_IDX (0x62)
#define OTP_FLEXSPI_FLASH_IMG_SIZE_SHIFT (28u)
#define OTP_FLEXSPI_FLASH_IMG_SIZE_MASK (0xfu << OTP_FLEXSPI_FLASH_IMG_SIZE_SHIFT)
#define OTP_FLEXSPI_FLASH_IMG_SIZE_VALUE()                                                         \
    ((OCOTP0->OTP_SHADOW[OTP_FLEXSPI_FLASH_IMG_SIZE_FUSE_IDX] & OTP_FLEXSPI_FLASH_IMG_SIZE_MASK) >> \
     OTP_FLEXSPI_FLASH_IMG_SIZE_SHIFT)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//                                                                                                                    //
//                                  eMMC/SD related fuse definitions                                                  //
//                                                                                                                    //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SDHC_DEVICE_TYPE
#define OTP_SDHC_DEVICE_TYPE_FUSE_IDX (0x62)
#define OTP_SDHC_DEVICE_TYPE_SHIFT (0u)
#define OTP_SDHC_DEVICE_TYPE_MASK (0x1u << OTP_SDHC_DEVICE_TYPE_SHIFT)
#define OTP_SDHC_DEVICE_TYPE_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_DEVICE_TYPE_FUSE_IDX] & OTP_SDHC_DEVICE_TYPE_MASK) >> OTP_SDHC_DEVICE_TYPE_SHIFT)

// SDHC_BUS_WIDTH
#define OTP_SDHC_BUS_WIDTH_FUSE_IDX (0x62)
#define OTP_SDHC_BUS_WIDTH_SHIFT (1u)
#define OTP_SDHC_BUS_WIDTH_MASK (0x3u << OTP_SDHC_BUS_WIDTH_SHIFT)
#define OTP_SDHC_BUS_WIDTH_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_BUS_WIDTH_FUSE_IDX] & OTP_SDHC_BUS_WIDTH_MASK) >> OTP_SDHC_BUS_WIDTH_SHIFT)

// SDHC_SPEED
#define OTP_SDHC_SPEED_FUSE_IDX (0x62)
#define OTP_SDHC_SPEED_SHIFT (3u)
#define OTP_SDHC_SPEED_MASK (0x3u << OTP_SDHC_SPEED_SHIFT)
#define OTP_SDHC_SPEED_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_SPEED_FUSE_IDX] & OTP_SDHC_SPEED_MASK) >> OTP_SDHC_SPEED_SHIFT)

// SDHC_PWR_CYCLE_EN
#define OTP_SDHC_PWR_CYCLE_EN_FUSE_IDX (0x62)
#define OTP_SDHC_PWR_CYCLE_EN_SHIFT (5u)
#define OTP_SDHC_PWR_CYCLE_EN_MASK (0x1u << OTP_SDHC_PWR_CYCLE_EN_SHIFT)
#define OTP_SDHC_PWR_CYCLE_EN_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_PWR_CYCLE_EN_FUSE_IDX] & OTP_SDHC_PWR_CYCLE_EN_MASK) >> OTP_SDHC_PWR_CYCLE_EN_SHIFT)

// SDHC0_PWR_POL
#define OTP_SDHC0_PWR_POL_FUSE_IDX (0x62)
#define OTP_SDHC0_PWR_POL_SHIFT (6u)
#define OTP_SDHC0_PWR_POL_MASK (0x1u << OTP_SDHC0_PWR_POL_SHIFT)
#define OTP_SDHC0_PWR_POL_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC0_PWR_POL_FUSE_IDX] & OTP_SDHC0_PWR_POL_MASK) >> OTP_SDHC0_PWR_POL_SHIFT)

// SDHC1_PWR_POL
#define OTP_SDHC1_PWR_POL_FUSE_IDX (0x62)
#define OTP_SDHC1_PWR_POL_SHIFT (7u)
#define OTP_SDHC1_PWR_POL_MASK (0x1u << OTP_SDHC1_PWR_POL_SHIFT)
#define OTP_SDHC1_PWR_POL_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC1_PWR_POL_FUSE_IDX] & OTP_SDHC1_PWR_POL_MASK) >> OTP_SDHC1_PWR_POL_SHIFT)

// SDHC_PWR_CYCLE_WAIT
#define OTP_SDHC_PWR_CYCLE_WAIT_FUSE_IDX (0x62)
#define OTP_SDHC_PWR_CYCLE_WAIT_SHIFT (8u)
#define OTP_SDHC_PWR_CYCLE_WAIT_MASK (0x3u << OTP_SDHC_PWR_CYCLE_WAIT_SHIFT)
#define OTP_SDHC_PWR_CYCLE_WAIT_VALUE()                                                      \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_PWR_CYCLE_WAIT_FUSE_IDX] & OTP_SDHC_PWR_CYCLE_WAIT_MASK) >> \
     OTP_SDHC_PWR_CYCLE_WAIT_SHIFT)

// SDHC_PWR_STABLE_WAIT
#define OTP_SDHC_PWR_STABLE_WAIT_FUSE_IDX (0x62)
#define OTP_SDHC_PWR_STABLE_WAIT_SHIFT (10u)
#define OTP_SDHC_PWR_STABLE_WAIT_MASK (0x1u << OTP_SDHC_PWR_STABLE_WAIT_SHIFT)
#define OTP_SDHC_PWR_STABLE_WAIT_VALUE()                                                       \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_PWR_STABLE_WAIT_FUSE_IDX] & OTP_SDHC_PWR_STABLE_WAIT_MASK) >> \
     OTP_SDHC_PWR_STABLE_WAIT_SHIFT)

// SDHC0_CARD_VOLTAGE
#define OTP_SDHC0_CARD_VOLTAGE_FUSE_IDX (0x62)
#define OTP_SDHC0_CARD_VOLTAGE_SHIFT (11u)
#define OTP_SDHC0_CARD_VOLTAGE_MASK (1u << OTP_SDHC0_CARD_VOLTAGE_SHIFT)
#define OTP_SDHC0_CARD_VOLTAGE_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC0_CARD_VOLTAGE_FUSE_IDX] & OTP_SDHC0_CARD_VOLTAGE_MASK) >> OTP_SDHC0_CARD_VOLTAGE_SHIFT)

// SDHC1_CARD_VOLTAGE
#define OTP_SDHC1_CARD_VOLTAGE_FUSE_IDX (0x62)
#define OTP_SDHC1_CARD_VOLTAGE_SHIFT (12u)
#define OTP_SDHC1_CARD_VOLTAGE_MASK (1u << OTP_SDHC1_CARD_VOLTAGE_SHIFT)
#define OTP_SDHC1_CARD_VOLTAGE_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC1_CARD_VOLTAGE_FUSE_IDX] & OTP_SDHC1_CARD_VOLTAGE_MASK) >> OTP_SDHC1_CARD_VOLTAGE_SHIFT)

// SDHC_CARD_RESET_PRE_IDLE
#define OTP_SDHC_RESET_PRE_IDLE_FUSE_IDX (0x62)
#define OTP_SDHC_RESET_PRE_IDLE_SHIFT (13u)
#define OTP_SDHC_RESET_PRE_IDLE_MASK (1u << OTP_SDHC_RESET_PRE_IDLE_SHIFT)
#define OTP_SDHC_RESET_PRE_IDLE_VALUE()                                                      \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_RESET_PRE_IDLE_FUSE_IDX] & OTP_SDHC_RESET_PRE_IDLE_MASK) >> \
     OTP_SDHC_RESET_PRE_IDLE_SHIFT)

// SDHC_FAST_MODE_EN
#define OTP_SDHC_FAST_MODE_EN_FUSE_IDX (0x62)
#define OTP_SDHC_FAST_MODE_EN_SHIFT (14u)
#define OTP_SDHC_FAST_MODE_EN_MASK (1u << OTP_SDHC_FAST_MODE_EN_SHIFT)
#define OTP_SDHC_FAST_MODE_EN_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_FAST_MODE_EN_FUSE_IDX] & OTP_SDHC_FAST_MODE_EN_MASK) >> OTP_SDHC_FAST_MODE_EN_SHIFT)

// SDHC_FASTBOOT_ACK_EN
#define OTP_SDHC_FASTBOOT_ACK_EN_FUSE_IDX (0x62)
#define OTP_SDHC_FASTBOOT_ACK_EN_SHIFT (15u)
#define OTP_SDHC_FASTBOOT_ACK_EN_MASK (1u << OTP_SDHC_FASTBOOT_ACK_EN_SHIFT)
#define OTP_SDHC_FASTBOOT_ACK_EN_VALUE()                                                       \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_FASTBOOT_ACK_EN_FUSE_IDX] & OTP_SDHC_FASTBOOT_ACK_EN_MASK) >> \
     OTP_SDHC_FASTBOOT_ACK_EN_SHIFT)

// SDHC_PAD_CTL_FREEZE
#define OTP_SDHC_PAD_CTL_FREEZE_FUSE_IDX (0x62)
#define OTP_SDHC_PAD_CTL_FREEZE_SHIFT (16u)
#define OTP_SDHC_PAD_CTL_FREEZE_MASK (0x1u << OTP_SDHC_PAD_CTL_FREEZE_SHIFT)
#define OTP_SDHC_PAD_CTL_FREEZE_VALUE()                                                      \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_PAD_CTL_FREEZE_FUSE_IDX] & OTP_SDHC_PAD_CTL_FREEZE_MASK) >> \
     OTP_SDHC_PAD_CTL_FREEZE_SHIFT)

// SDHC_PAD_CTL_FAST_FREEZE
#define OTP_SDHC_PAD_CTL_FAST_FREEZE_FUSE_IDX (0x62)
#define OTP_SDHC_PAD_CTL_FAST_FREEZE_SHIFT (17u)
#define OTP_SDHC_PAD_CTL_FAST_FREEZE_MASK (0x1u << OTP_SDHC_PAD_CTL_FAST_FREEZE_SHIFT)
#define OTP_SDHC_PAD_CTL_FAST_FREEZE_VALUE()                                                           \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_PAD_CTL_FAST_FREEZE_FUSE_IDX] & OTP_SDHC_PAD_CTL_FAST_FREEZE_MASK) >> \
     OTP_SDHC_PAD_CTL_FAST_FREEZE_SHIFT)

#define OTP_SDHC_PAD_CONTROL_OVERRIDE_VALUE() \
    ((OTP_SDHC_PAD_CTL_FREEZE_VALUE()) | (OTP_SDHC_PAD_CTL_FAST_FREEZE_VALUE() << 1u))

// QSPI_PAD_CTL_FREEZE
#define OTP_QSPI_PAD_CTL_FREEZE_FUSE_IDX (0x62)
#define OTP_QSPI_PAD_CTL_FREEZE_SHIFT (18u)
#define OTP_QSPI_PAD_CTL_FREEZE_MASK (0x1u << OTP_QSPI_PAD_CTL_FREEZE_SHIFT)
#define OTP_QSPI_PAD_CTL_FREEZE_VALUE()                                                      \
    ((OCOTP0->OTP_SHADOW[OTP_QSPI_PAD_CTL_FREEZE_FUSE_IDX] & OTP_QSPI_PAD_CTL_FREEZE_MASK) >> \
     OTP_QSPI_PAD_CTL_FREEZE_SHIFT)

// QSPI_PAD_CTL_FAST_FREEZE
#define OTP_QSPI_PAD_CTL_FAST_FREEZE_FUSE_IDX (0x62)
#define OTP_QSPI_PAD_CTL_FAST_FREEZE_SHIFT (19u)
#define OTP_QSPI_PAD_CTL_FAST_FREEZE_MASK (0x1u << OTP_QSPI_PAD_CTL_FAST_FREEZE_SHIFT)
#define OTP_QSPI_PAD_CTL_FAST_FREEZE_VALUE()                                                           \
    ((OCOTP0->OTP_SHADOW[OTP_QSPI_PAD_CTL_FAST_FREEZE_FUSE_IDX] & OTP_QSPI_PAD_CTL_FAST_FREEZE_MASK) >> \
     OTP_QSPI_PAD_CTL_FAST_FREEZE_SHIFT)

#define OTP_QSPI_PAD_CONTROL_OVERRIDE_VALUE() \
    ((OTP_QSPI_PAD_CTL_FREEZE_VALUE()) | (OTP_QSPI_PAD_CTL_FAST_FREEZE_VALUE() << 1u))

// SDHC_DLL_SETTING_TUNING_OVERRIDE_ENABLE
#define OTP_SDHC_DLL_SETTING_TUNING_OVERRIDE_ENABLE_FUSE_IDX (0x63)
#define OTP_SDHC_DLL_SETTING_TUNING_OVERRIDE_ENABLE_SHIFT (7u)
#define OTP_SDHC_DLL_SETTING_TUNING_OVERRIDE_ENABLE_MASK (0x1u << OTP_SDHC_DLL_SETTING_TUNING_OVERRIDE_ENABLE_SHIFT)
#define OTP_SDHC_DLL_SETTING_TUNING_OVERRIDE_ENABLE_VALUE()                     \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_DLL_SETTING_TUNING_OVERRIDE_ENABLE_FUSE_IDX] & \
      OTP_SDHC_DLL_SETTING_TUNING_OVERRIDE_ENABLE_MASK) >>                      \
     OTP_SDHC_DLL_SETTING_TUNING_OVERRIDE_ENABLE_SHIFT)

// SDHC_DLL_SETTING_TUNING_START
#define OTP_SDHC_DLL_SETTING_TUNING_START_FUSE_IDX (0x63)
#define OTP_SDHC_DLL_SETTING_TUNING_START_SHIFT (8u)
#define OTP_SDHC_DLL_SETTING_TUNING_START_MASK (0xffu << OTP_SDHC_DLL_SETTING_TUNING_START_SHIFT)
#define OTP_SDHC_DLL_SETTING_TUNING_START_VALUE()                                                                \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_DLL_SETTING_TUNING_START_FUSE_IDX] & OTP_SDHC_DLL_SETTING_TUNING_START_MASK) >> \
     OTP_SDHC_DLL_SETTING_TUNING_START_SHIFT)

// SDHC_DLL_SETTING_TUNING_STEP
#define OTP_SDHC_DLL_SETTING_TUNING_STEP_FUSE_IDX (0x63)
#define OTP_SDHC_DLL_SETTING_TUNING_STEP_SHIFT (16u)
#define OTP_SDHC_DLL_SETTING_TUNING_STEP_MASK (0x7u << OTP_SDHC_DLL_SETTING_TUNING_STEP_SHIFT)
#define OTP_SDHC_DLL_SETTING_TUNING_STEP_VALUE()                                                               \
    ((OCOTP0->OTP_SHADOW[OTP_SDHC_DLL_SETTING_TUNING_STEP_FUSE_IDX] & OTP_SDHC_DLL_SETTING_TUNING_STEP_MASK) >> \
     OTP_SDHC_DLL_SETTING_TUNING_STEP_SHIFT)

// USB PLL divider select value
#define OTP_USB_PLL_DIV_SEL_IDX (0x63)
#define OTP_USB_PLL_DIV_SEL_SHIFT (19u)
#define OTP_USB_PLL_DIV_SEL_MASK (0x7u << OTP_USB_PLL_DIV_SEL_SHIFT)
#define OTP_USB_PLL_DIV_SEL_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_USB_PLL_DIV_SEL_IDX] & OTP_USB_PLL_DIV_SEL_MASK) >> OTP_USB_PLL_DIV_SEL_SHIFT)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//                                                                                                                    //
//                                  Un-categorzed fuse definitions                                                    //
//                                                                                                                    //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CRC Banks
#define OTP_CRC_FUSE_IDX (0x1E8)

#define OTP_EDI_WORD0_FUSE_IDX (0x20)
#define OTP_EDI_WORD1_FUSE_IDX (0x21)
#define OTP_EDI_WORD2_FUSE_IDX (0x22)
#define OTP_EDI_WORD3_FUSE_IDX (0x23)

#define OTP_RKTH_FUSE_IDX (0x78)
#define OTP_RKTH_31_0_IDX (0x7F)

#define OTP_REVOKE_ROOTKEY_FUSE_IDX (0x65)
#define OTP_REVOKE_ROOTKEY_SHIFT (0u)
#define OTP_REVOKE_ROOTKEY_MASK (0xFu << OTP_REVOKE_ROOTKEY_SHIFT)

#define OTP_SKIP_DICE_FUSE_IDX (0x60)
#define OTP_SKIP_DICE_SHIFT (23u)
#define OTP_SKIP_DICE_MASK (0x1u << OTP_SKIP_DICE_SHIFT)

#define OTP_DICE_INC_OTP_FUSE_IDX (0x60)
#define OTP_DICE_INC_OTP_SHIFT (22u)
#define OTP_DICE_INC_OTP_MASK (0x1u << OTP_DICE_INC_OTP_SHIFT)

#define OTP_SECURE_BOOT_EN_FUSE_IDX (0x60)
#define OTP_SECURE_BOOT_EN_SHIFT (20u)
#define OTP_SECURE_BOOT_EN_MASK (0x3u << OTP_SECURE_BOOT_EN_SHIFT)

#define OTP_PSA_BSTATE_SKIP_FUSE_IDX (0x60)
#define OTP_PSA_BSTATE_SKIP_SHIFT (15u)
#define OTP_PSA_BSTATE_SKIP_MASK (0x1u << OTP_PSA_BSTATE_SKIP_SHIFT)

#define OTP_PSA_BSTATE_INC_KEYS_FUSE_IDX (0x60)
#define OTP_PSA_BSTATE_INC_KEYS_SHIFT (16u)
#define OTP_PSA_BSTATE_INC_KEYS_MASK (0x1u << OTP_PSA_BSTATE_INC_KEYS_SHIFT)

#define OTP_REVOKE_IMG_KEY_FUSE_IDX (0x66)
#define OTP_REVOKE_IMG_KEY_SHIFT (0u)
#define OTP_REVOKE_IMG_KEY_MASK (0x0000FFFFu << OTP_REVOKE_IMG_KEY_SHIFT)
#define OTP_REVOKE_IMG_KEY_VALUE() \
    ((OCOTP0->OTP_SHADOW[OTP_REVOKE_IMG_KEY_FUSE_IDX] & OTP_REVOKE_IMG_KEY_MASK) >> OTP_REVOKE_IMG_KEY_SHIFT)

#define OTP_DCFG_CC_SOCU_FUSE_IDX (0x5F)
#define OTP_DCFG_CC_SOCU_CRC8_SHIFT (0u)
#define OTP_DCFG_CC_SOCU_CRC8_MASK (0xFFu << OTP_DCFG_CC_SOCU_CRC8_SHIFT)
#define OTP_DCFG_CC_SOCU_DEFAULT_SHIFT (8u)
#define OTP_DCFG_CC_SOCU_DEFAULT_MASK (0xFFu << OTP_DCFG_CC_SOCU_DEFAULT_SHIFT)
#define OTP_DCFG_CC_SOCU_PINNED_SHIFT (16u)
#define OTP_DCFG_CC_SOCU_PINNED_MASK (0xFFu << OTP_DCFG_CC_SOCU_PINNED_SHIFT)

#define OTP_DCFG_CC_SOCU_NS_FUSE_IDX (0x64)
#define OTP_DCFG_CC_SOCU_NS_CRC8_SHIFT (0u)
#define OTP_DCFG_CC_SOCU_NS_CRC8_MASK (0xFFu << OTP_DCFG_CC_SOCU_NS_CRC8_SHIFT)
#define OTP_DCFG_CC_SOCU_NS_DEFAULT_SHIFT (8u)
#define OTP_DCFG_CC_SOCU_NS_DEFAULT_MASK (0xFFu << OTP_DCFG_CC_SOCU_NS_DEFAULT_SHIFT)
#define OTP_DCFG_CC_SOCU_NS_PINNED_SHIFT (16u)
#define OTP_DCFG_CC_SOCU_NS_PINNED_MASK (0xFFu << OTP_DCFG_CC_SOCU_NS_PINNED_SHIFT)

#define OTP_ENABLE_CRC_CHECK_FUSE_IDX (0x65)
#define OTP_ENABLE_CRC_CHECK_SHIFT (5u)
#define OTP_ENABLE_CRC_CHECK_MASK (0x03u << OTP_ENABLE_CRC_CHECK_SHIFT)
#define OTP_ENABLE_CRC_CHECK_VALUE() \
    \
((OCOTP0->OTP_SHADOW[OTP_ENABLE_CRC_CHECK_FUSE_IDX] & OTP_ENABLE_CRC_CHECK_MASK) >> OTP_ENABLE_CRC_CHECK_SHIFT)

#define OTP_DCFG_CC_SOCU_AP_FUSE_IDX (0x68)
#define OTP_DCFG_CC_SOCU_AP_DEFAULT_SHIFT (8u)
#define OTP_DCFG_CC_SOCU_AP_DEFAULT_MASK (0xFFu << OTP_DCFG_CC_SOCU_AP_DEFAULT_SHIFT)
#define OTP_DCFG_CC_SOCU_AP_PINNED_SHIFT (16u)
#define OTP_DCFG_CC_SOCU_AP_PINNED_MASK (0xFFu << OTP_DCFG_CC_SOCU_AP_PINNED_SHIFT)

#define OTP_USB_ID_FUSE_IDX (0x69)
#define OTP_USB_ID_VID_SHIFT (0u)
#define OTP_USB_ID_VID_MASK (0xFFFFu << OTP_USB_ID_VID_SHIFT)
#define OTP_USB_ID_PID_SHIFT (16u)
#define OTP_USB_ID_PID_MASK (0xFFFFu << OTP_USB_ID_PID_SHIFT)

#define OTP_DAP_VENDOR_USAGE_FUSE_IDX (0x67)
#define OTP_DAP_VENDOR_USAGE_SHIFT (0u)
#define OTP_DAP_VENDOR_USAGE_MASK (0xFFFFu << OTP_DAP_VENDOR_USAGE_SHIFT)

#define OTP_FORCE_UUID_MATCH_FUSE_IDX (0x5F)
#define OTP_FORCE_UUID_MATCH_SHIFT (24u)
#define OTP_FORCE_UUID_MATCH_MASK (0x1u << OTP_FORCE_UUID_MATCH_SHIFT)

#define OTP_USE_OTFAD_FUSE_IDX (0x6A)
#define OTP_USE_OTFAD_SHIFT (12)
#define OTP_USE_OTFAD_MASK (0x3u << OTP_USE_OTFAD_SHIFT)
#define OTP_USE_OTFAD_VALUE() ((OCOTP0->OTP_SHADOW[OTP_USE_OTFAD_FUSE_IDX] & OTP_USE_OTFAD_MASK) >> OTP_USE_OTFAD_SHIFT)

#define OTP_OTFAD_KEY_SCRAMBLE_SEED_IDX (0X6B)

#define OTP_OTFAD_KEY_FUSE_IDX (0x6C)
#define OTP_OTFAD_KEY0_VALUE() (OCOTP0->OTP_SHADOW[OTP_OTFAD_KEY_FUSE_IDX])
#define OTP_OTFAD_KEY1_VALUE() (OCOTP0->OTP_SHADOW[OTP_OTFAD_KEY_FUSE_IDX + 1])
#define OTP_OTFAD_KEY2_VALUE() (OCOTP0->OTP_SHADOW[OTP_OTFAD_KEY_FUSE_IDX + 2])
#define OTP_OTFAD_KEY3_VALUE() (OCOTP0->OTP_SHADOW[OTP_OTFAD_KEY_FUSE_IDX + 3])

// Note: All of these fuse words are redundancy words, only the low-half 16-bit can be used.
#define OTP_NONTRUSTED_FIRMWARE_VERSION_COUNTER_FUSE_IDX (0x80)
#define OTP_NONTRUSTED_FIRMWARE_VERSION_COUNTER_FUSE_WORDS (16)
#define OTP_TRUSTED_FIRMWARE_FIRMWARE_VERSION_COUNTER_FUSE_IDX (0x90)
#define OTP_TRUSTED_FIRMWARE_FIRMWARE_VERSION_COUNTER_FUSE_WORDS (4)

#define OTP_SBKEK_SEED_FUSE_IDX (0x150)
#define OTP_NXP_DEV_CERT_FUSE_IDX (0x158)

#define OTP_ROM_PATCH_DATA0_FUSE_IDX (0xA0)
#define OTP_ROM_PATCH_DATA_FUSE_WORDS (176)

#endif // __FUSEMAP_H__
